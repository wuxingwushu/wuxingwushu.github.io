h1TextView  文本

p	id：为TextView设置一个组件ID
p	layout_width：组件的宽度
p	layout_height：组件的高度
p	text：设置显示的文本内容（一般是用@string/NAME来引用，统一管理：在strings.xml当中）
p	textColor：设置字体颜色（一般是用@color/NAME来引用，统一管理：在colors.xml当中）
p	textStyle：设置字体风格，（normal(无效果) , bold(加粗) , italic(斜体)）
p	textSize：字体大小，单位一般是用SP
p	background：控制的背景颜色，可以理解为填充整个控件的颜色，可以是图片（一般是用@color/NAME来引用，统一管理：在colors.xml当中）
p	addingLeft：设置内容与边框的间距gravity：设置控件中内容的对齐方向，TextView中是文字，lmageView中是图片等等

h1TextView阴影

p	shadowColor：设置阴影颜色，需要与shadowRadius一起使用
p	shadowRadius：设置阴影的模糊程度，设为0.1就变成原字体的样式，建议使用3.0
p	shadowDx：设置阴影在水平方向的偏移，就是水平方向阴影开始的横坐标位置
p	shadowDy：设置阴影在坚直方向的偏移，就是坚直方向阴影开始的纵坐标位置

h1TextView滚动

p	singleLine：内容单行显示
p	ellipsize：在哪里省略文本
p	marqueeRepeatLimit：字幕动画重复的次数
p	focusable：是否可以获取焦点
p	focusableInTouchMode=：用于控制视图在触摸模式下是否可以聚焦
p	非容器控件标签中放<requestFocus />标签，表示将当前控件设为焦点。






h1BUTTON  按钮

p	onClick：添加事件。
p	
p	drawable：引用的Drawable位图
p	state_focused：是否获得焦点
p	state_pressed：控件是否被按下
p	state_enabled：控件是否可用
p	state_selected：控件是否被选择，针对有滚轮的情况
p	state_checked：控件是否被勾选
p	state_checkedle：控件是否被勾选，eg:checkbox






h1EditText  输入框

p	hint：输入提示
p	textColorHint：输入提示文字的颜色
p	inputType：输入类型
p	drawableLeft：在输入框的指定方位添加图片
p	drawablePadding：设置内容与输入内容的间距
p	paddingLeft：设置内容与边框的间距
p	background：背景色
p	
p	我们可以通过xml中的属性android:backgroundTint和android:backgroundTintMode来设置，android:backgroundTintMode这个属性传的值就是刚刚上面那些PorterDuff.Mode中的值，效果的话上面的图也展示了。android:backgroundTint的话就是传color的值。
p	那么android:background和android:backgroundTint有什么区别呢？
p	如果设置了android:background，那么控件的背景颜色就会直接修改。
p	如果设置了android:backgroundTint，那么就会将设置的颜色和原来的背景进行一个叠加的过程，至于如何叠加，就是上面的mode。






h1ImageView  图片

p	src：设置图片资源
p	maxHeight：最大高度，和adjustViewBounds一起使用才有效
p	maxWidth：最大宽度，和adjustViewBounds一起使用才有效
p	adjustViewBounds：调整View的界限
p	scaleType：设置图片缩放类型

h1scaleType  有的类型

p	fitStart：保持宽高比缩放图片，直到较长的边与lmage的边长相等，缩放完成后将图片放在lmageView的左上角。
p	fitCenter：默认值，同上，缩放后放中间。
p	fitEnd：同上，缩放后放在右下角。
p	fitXY：对图片的横纵方向进行独立缩放，使得该图片完全适应lmageView，但是图片的高宽比可能会发生改变。
p	center：保持原图的大小，显示在lmageView的中心。当原图的size大于lmageView的size，超过部分裁剪处理。
p	centerCrop：保持宽高比缩放图片，直到完全覆盖lmagView，可能会出现图片显示不完全。
p	centerlnside：保持宽高比缩放图片，直到lmaheView能够完全地显示图片。
p	matrix：不改变原图的大小，从lmageView的左上角开始绘制原图，原图超过lmageView的部分作裁剪处理。







h1ProgressBar  进度条

p	max：进度条的最大值
p	progress：进度条己完成进度值
p	indeterminate：如果设置成true，则进度条不精确显示进度
p	style="?android:attr/progressBarStyleHorizontal"进度条样式


h1通知的设置

p	setContentTitle("道生发的通知") 	设置标题
p	setContentText("还不认真学习，还在玩！！！")	设置文本内容
p	setSmallIcon(R.drawable.ic_baseline_ac_unit_24)	设置小图标
p	setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.ic_launcher_foreground))	设置通知的大图标
p	setColor(Color.parseColor("#00FF00"))		设置小图标的颜色
p	setContentIntent(pendingIntent)	设置点击通知后的跳转意图
p	setAutoCancel(true)		设置点击通知后自动消除通知
p	setWhen()		设置通知被创建的时间